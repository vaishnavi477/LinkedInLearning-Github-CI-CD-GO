# This workflow builds and tests a Go project.
# Reference: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go CI

env:
  GIN_MODE: release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # --- Force Go 1.22 setup ---
      - name: Remove any old cached Go toolchain
        run: sudo rm -rf /opt/hostedtoolcache/go || true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache-dependency-path: go.sum

      - name: Verify Go version
        run: go version

      # --- Linting and static analysis ---
      - name: Run Revive (linter)
        uses: morphy2k/revive-action@v2.4.1

      - name: Run Staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          install-go: false  # Prevent Staticcheck from trying to reinstall Go

      # --- Build and test ---
      - name: Build project
        run: |
          go mod tidy
          go mod download
          go install gotest.tools/gotestsum@latest

      - name: Run Tests
        run: |
          gotestsum --format=standard-verbose --junitfile=junit.xml

      # --- Publish test report ---
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit.xml'
          detailed_summary: true
          include_passed: true
